{"version":3,"sources":["config/firebase.js","components/Login.js","components/SignUp.js","components/FormDiv.js","components/HomeNav.js","components/PostForm.js","components/Post.js","components/Wellocmebord.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","login","email","password","Promise","resolve","reject","signInWithEmailAndPassword","then","user","catch","e","userGetName","userId","ref","once","res","val","message","getData","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userData","onLogin","bind","assertThisInitialized","undefined","setState","unMountFormDiv","alert","console","log","_context","t0","_this2","react_default","a","createElement","FormGroup","Label","for","Input","type","onChange","target","value","placeholder","Button","onClick","color","Component","SignUp","submit","_this$state","name","pass","createUserWithEmailAndPassword","currentUser","uid","set","error","code","errorMessage","registration","id","FormDiv","loginFromShow","signUpFromShow","signup","Row","Col","sm","className","Card","body","components_Login","components_SignUp","HomeNav","toggleNavbar","collapsed","onLogout","oncreatePost","viwePost","signOut","unMountWellcomeBoard","createPostFun","upLoadfun","Navbar","light","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","React","PostForm","selectedFile","onupLoadfun","fileSelectHandler","img","describe","storageRef","imagesArray","i","length","child","concat","put","snapshot","getDownloadURL","snapUrl","push","postObj","createdAt","ServerValue","TIMESTAMP","likeCounter","commentCounter","_unused","addPost","fileInfo","files","_this$state2","style","display","fileInput","multiple","click","Post","hover","timerValue","onhover","onleave","countLike","timer","setTimeout","likeCounterFun","lg","src","userName","moment","postTime","fromNow","class","es","countFrom","images","onMouseEnter","onMouseLeave","dist_default","size","Wellcomeboard","postForm","postDiv","createPostfun","fetchData","getingData","k","userInfo","postStore","printPost","HomeNav_HomeNav","map","item","components_Post","key","Date","components_PostForm","App","formDiv","WellcomeBoard","components_FormDiv","Wellocmebord","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.c9ab58ee.chunk.js","sourcesContent":["import * as firebase from 'firebase'\r\n\r\n\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCgtZ-oZ3H3S0_G8YwNGx3mLp0AiMXmH8I\",\r\n  authDomain: \"login-signup-add9b.firebaseapp.com\",\r\n  databaseURL: \"https://login-signup-add9b.firebaseio.com\",\r\n  projectId: \"login-signup-add9b\",\r\n  storageBucket: \"login-signup-add9b.appspot.com\",\r\n  messagingSenderId: \"968667312495\",\r\n  appId: \"1:968667312495:web:c447c10bb675ca00\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar db = firebase.database();\r\n\r\n\r\n\r\nfunction registration(email, pass, userData) {\r\n  firebase.auth().createUserWithEmailAndPassword(email, pass)\r\n    .then(() => {\r\n      var userId = firebase.auth().currentUser.uid;\r\n      db.ref('user/' + userId).set(userData)\r\n    }).catch(function (error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // ...\r\n      console.log(errorMessage)\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction login(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        resolve(user)\r\n      }).catch(e => {\r\n        reject('mssage')\r\n      }\r\n      )\r\n  })\r\n\r\n}\r\n\r\n\r\nfunction userGetName(userId) {\r\n  return new Promise((resolve, reject) => {\r\n    db.ref('user/').once(\"value\")\r\n      .then(res => res.val())\r\n      .then(res => {\r\n        resolve(res)\r\n      }).catch(e => {\r\n        reject({ message: e })\r\n      })\r\n  })\r\n}\r\n\r\n\r\nfunction logout() {\r\n  firebase.auth().signOut().then(function () {\r\n    // Sign-out successful.\r\n  }).catch(function (error) {\r\n    // An error happened.\r\n  });\r\n\r\n}\r\n\r\n\r\nfunction addPost(img, describe) {\r\n\r\n  let userId = firebase.auth().currentUser.uid\r\n  // Create a root reference\r\n  var storageRef = firebase.storage().ref();\r\n  \r\n  var imagesArray = [];\r\n\r\n  try {\r\n    for (var i = 0; i < img.length; i++) {\r\n      //Upload the file and metadata\r\n      storageRef.child(`images/${img[i].name}`).put(img[i])\r\n        .then((snapshot) => {\r\n          snapshot.ref.getDownloadURL()\r\n            .then((snapUrl) => {\r\n              imagesArray.push(snapUrl)\r\n              if (imagesArray.length === img.length) {\r\n                // console.log(img.length, \"<============= img.length \")\r\n                // console.log(imagesArray.length, \"<============= imagesArray.length\")\r\n                var postObj = {\r\n                  userId,\r\n                  createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n                  imagesArray,\r\n                  describe,\r\n                  likeCounter: 0,\r\n                  commentCounter: 0,\r\n                }\r\n                db.ref('post/').push(postObj)\r\n                getData()\r\n              }\r\n            })\r\n        })\r\n    }\r\n  } catch{\r\n    alert(\"Select Your Images or type Describction\")\r\n  }\r\n}\r\n\r\n\r\nfunction getData() {\r\n  return new Promise((resolve, reject) => {\r\n    db.ref('post/').once(\"value\")\r\n      .then(res => res.val())\r\n      .then(res => {\r\n        resolve(res)\r\n      }).catch(e => {\r\n        reject({ message: e })\r\n      })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n  registration,\r\n  login,\r\n  logout,\r\n  userGetName,\r\n  addPost,\r\n  getData\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\nimport { login,userGetName } from '../config/firebase'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userData :{},\r\n\r\n        }\r\n\r\n        this.onLogin = this.onLogin.bind(this)\r\n\r\n    }\r\n\r\n\r\n\r\n    async onLogin() {\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n             if (email !== undefined && password !== undefined) {\r\n                const user = await login(email, password)\r\n                userGetName(\"Nadir\")  \r\n                this.setState({\r\n                    userData : user\r\n                })\r\n                \r\n                this.props.unMountFormDiv()\r\n\r\n            } else {\r\n                alert(\"Emty Field Email And Password\")\r\n            }\r\n        } catch (e) {\r\n\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FormGroup>\r\n                    <Label for=\"exampleEmail\">Name</Label>\r\n                    <Input type=\"email\" onChange={e => { this.setState({ email: e.target.value }) }} placeholder=\"Enter Email\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleEmail\">Password</Label>\r\n                    <Input type=\"password\" onChange={e => { this.setState({ password: e.target.value }) }} placeholder=\"Enter Passwaord\" />\r\n                </FormGroup>\r\n                <Button onClick={this.onLogin} color=\"primary\">Login</Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\nimport {registration} from '../config/firebase'\r\n\r\nclass SignUp extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n   \r\n\r\n    }\r\n\r\n\r\n    this.submit = this.submit.bind(this)\r\n\r\n}\r\n\r\n\r\n\r\nsubmit(){\r\nconst {name,email,pass} = this.state;\r\nconst userData = {name,email,pass};\r\nregistration(email,pass,userData)\r\n//registation component dismis\r\nthis.props.unMountFormDiv()\r\n}\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <FormGroup >\r\n                    <Label for=\"Name\">Name</Label>\r\n                    <Input type=\"email\"  onChange={e =>{this.setState({name : e.target.value})}}   placeholder=\"Enter Name\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleEmail\">Email</Label>\r\n                    <Input type=\"email\" onChange={e =>{this.setState({email : e.target.value})}}    id=\"password\" placeholder=\"Enter Email\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleEmail\">Password</Label>\r\n                    <Input type=\"password\" onChange={e =>{this.setState({pass : e.target.value})}}   placeholder=\"Enter Passwaord\" />\r\n                </FormGroup>\r\n                <Button onClick={this.submit} color=\"success\">Sign Up</Button>{' '}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport { Card, Row, Col, Button } from 'reactstrap';\r\nimport Login from './Login'\r\nimport SignUp from './SignUp'\r\n\r\nclass FormDiv extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      login : true\r\n    }\r\n\r\n    this.loginFromShow = this.loginFromShow.bind(this)\r\n    this.signUpFromShow = this.signUpFromShow.bind(this)\r\n\r\n   \r\n    \r\n\r\n  }npm\r\n\r\n  loginFromShow() {\r\n    this.setState({\r\n      login: true,\r\n      signup: false,\r\n    })\r\n  }\r\n\r\n  signUpFromShow() {\r\n    this.setState({\r\n      login: false,\r\n      signup: true,\r\n    })\r\n  }\r\n\r\n\r\n \r\n\r\n  render() {\r\n   \r\n    const { login, signup } = this.state;\r\n    return (\r\n      <div>\r\n        <Row>\r\n\r\n          <Col sm=\"4\">\r\n            <Button onClick={this.loginFromShow} color=\"primary\" className=\"customBtn\">Login</Button>\r\n            <Button onClick={this.signUpFromShow} color=\"success\" className=\"customBtn\">Sign Up</Button>\r\n            <Card body>\r\n             \r\n              {login && <Login unMountFormDiv={this.props.unMountFormDiv}/>}\r\n             {signup && <SignUp unMountFormDiv={this.props.unMountFormDiv}/>}\r\n\r\n            </Card>\r\n\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormDiv;","import React from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\n//import { whileStatement } from '@babel/types';\r\nimport {logout} from '../config/firebase'\r\n\r\nexport default class HomeNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n\r\n    this.onLogout = this.onLogout.bind(this)\r\n    this.oncreatePost = this.oncreatePost.bind(this)\r\n    this.viwePost = this.viwePost.bind(this)\r\n\r\n  }\r\n\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n onLogout(){\r\n     logout()\r\n     this.props.unMountWellcomeBoard()\r\n }\r\n\r\n oncreatePost(){\r\n   this.props.createPostFun()\r\n }\r\n\r\n viwePost(){\r\n  this.props.upLoadfun()\r\n }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color=\"faded\" light>\r\n          <NavbarBrand href=\"#\" className=\"mr-auto\">Wellcome</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink href=\"#\" onClick={this.oncreatePost}>Create Post</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#\" onClick={this.viwePost}>Post Show</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#\" onClick={this.onLogout} >Sign Out</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport {addPost} from '../config/firebase'\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedFile : null,\r\n        }\r\n        this.onupLoadfun = this.onupLoadfun.bind(this);\r\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\r\n\r\n    }\r\n\r\n  onupLoadfun() {\r\n        const {selectedFile,describe} = this.state;\r\n     addPost(selectedFile,describe)\r\n        \r\n        \r\n    }\r\n\r\n    fileSelectHandler(e){\r\n       let fileInfo = e.target.files;\r\n        this.setState({\r\n            selectedFile : fileInfo,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {selectedFile,describe} = this.state;\r\n          \r\n        \r\n        return (\r\n            <div> \r\n                <br/><br/><br/><br/>    \r\n                <textarea  value={describe} onChange={(e) =>{this.setState({describe : e.target.value})}} placeholder=\"Type here discripction\"></textarea>\r\n                <input style={{display: 'none',}} \r\n                ref={fileInput => this.fileInput = fileInput}\r\n                type=\"file\" multiple\r\n                 onChange={this.fileSelectHandler} />\r\n                 <center>\r\n                 <br/>\r\n                 <br />\r\n                <Button color=\"primary\" onClick={() => this.fileInput.click() }>Select Images</Button>\r\n                <br />\r\n                <br />\r\n                <Button color=\"success\" onClick={this.onupLoadfun}>Upload</Button>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostForm;","import React, { Component } from 'react';\r\nimport { Card, Row, Col } from 'reactstrap';\r\nimport FacebookEmoji from 'react-facebook-emoji';\r\nimport FbImageLibrary from 'react-fb-image-grid'\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\n\r\nclass Post extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hover : false,\r\n            timerValue : 0,\r\n        }\r\n\r\n        this.onhover = this.onhover.bind(this)\r\n        this.onleave = this.onleave.bind(this)\r\n       this.countLike = this.countLike.bind(this)\r\n    }\r\n\r\n\r\nonhover(){\r\n    this.setState({hover : true})\r\n}\r\n\r\nonleave(){\r\n    this.timer()   \r\n}\r\n\r\ntimer(){\r\n    setTimeout(() => {\r\n        this.setState({hover : false})\r\n    }, 2500);\r\n}\r\n\r\ncountLike(){\r\n    this.props.likeCounterFun();\r\n}\r\n\r\n\r\n\r\n\r\n    render() { \r\n        const {hover} = this.state;\r\n        return (\r\n            <div className=\"PostDiv\">\r\n                <Row>\r\n                    <Col className=\"PostCol\" lg=\"6\" sm=\"12\">\r\n                        <Card body>\r\n                            <Row>\r\n                                <Col lg=\"1\" sm=\"1\">\r\n                                    <img src='https://www.gstatic.com/webp/gallery/1.jpg' className=\"imageSiz\" />\r\n                                </Col>\r\n                                <Col lg=\"6\" sm=\"6\" className=\"userInfo\">\r\n                                    <h4>{this.props.userName}</h4>\r\n                                    <p>{moment(this.props.postTime, \"YYYYMMDD\").fromNow()} <i class=\"fas fa-globe-asia\"></i></p>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr />\r\n                            <Row>\r\n                                <Col lg=\"12\" sm=\"12\">\r\n                                    <p>\r\n                                        {this.props.describe}\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <div className=\"imageCollection\">\r\n                                \r\n                                <FbImageLibrary countFrom={5} images={this.props.images}/>\r\n\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <div className=\"counterDiv\">\r\n                                <div>Likes {this.props.likeCounter}</div>\r\n                                <div>{this.props.commentCounter} Comment </div>\r\n                            </div>\r\n                            <hr />\r\n                            <Row className=\"LikeCommentRow\">\r\n                                <div onMouseEnter={this.onhover} onMouseLeave={this.onleave} className=\"displayReaction\" ><i className=\"far fa-thumbs-up\"></i> Like</div>\r\n                                <div><i class=\"far fa-comment-dots\"></i> Comments</div>\r\n                            </Row>\r\n                      { hover &&   <div className=\"reaction\"  >\r\n                                <hr />\r\n                                <Row >\r\n                                   <span onClick={this.countLike}><FacebookEmoji   type=\"like\" size=\"sm\" /></span>\r\n                                    <FacebookEmoji type=\"love\" size=\"sm\" />\r\n                                    <FacebookEmoji type=\"wow\" size=\"sm\" />\r\n                                    <FacebookEmoji type=\"yay\" size=\"sm\" />\r\n                                    <FacebookEmoji type=\"angry\" size=\"sm\" />\r\n                                    <FacebookEmoji type=\"haha\" size=\"sm\" />\r\n                                    <FacebookEmoji type=\"sad\" size=\"sm\" />\r\n                                </Row>\r\n                        </div>}\r\n\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\nimport HomeNav from './HomeNav'\r\nimport PostForm from './PostForm'\r\nimport Post from '../components/Post'\r\nimport { getData,userGetName } from '../config/firebase'\r\n\r\n\r\nclass Wellcomeboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            postForm: false,\r\n            postDiv: true,\r\n\r\n        }\r\n\r\n        this.createPostfun = this.createPostfun.bind(this)\r\n        this.upLoadfun = this.upLoadfun.bind(this)\r\n        this.fetchData = this.fetchData.bind(this)\r\n\r\n    }\r\n\r\n    createPostfun() {\r\n        this.setState({\r\n            postForm: true,\r\n            postDiv: false,\r\n        })\r\n    }\r\n\r\n    upLoadfun() {\r\n        this.setState({\r\n            postForm: false,\r\n            postDiv: true,\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    async fetchData() {\r\n        try {\r\n            const getingData = await getData();\r\n            const userInfo = await userGetName();\r\n            const postStore = [];\r\n            for (var k in getingData) {\r\n                postStore.push(getingData[k])\r\n            }\r\n\r\n            this.setState({\r\n                printPost: postStore,\r\n                userInfo : userInfo\r\n            })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { postForm, postDiv, printPost,userInfo } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <HomeNav\r\n                     createPostFun={this.createPostfun}\r\n                      unMountWellcomeBoard={this.props.unMountWellcomeBoard} \r\n                      upLoadfun={this.upLoadfun}\r\n                      />\r\n                </div>\r\n\r\n                {postDiv && printPost && <div className=\"postDiv\">\r\n                    {printPost.map(item => {\r\n                        return (<div>   \r\n                            {\r\n                                <Post\r\n                                key={item.userId}\r\n                                    userName={userInfo[item.userId].name}\r\n                                    postTime={new Date(item.createdAt)}\r\n                                    describe={item.describe}\r\n                                    images={item.imagesArray}\r\n                                    likeCounter={15}\r\n                                    commentCounter={27}\r\n                                />\r\n                            }\r\n                        </div>)\r\n                    })}\r\n                </div>}\r\n\r\n                {postForm && <div className=\"postForm\">\r\n                    <PostForm  />\r\n                </div>}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wellcomeboard;","import React, { Component } from 'react';\nimport './App.css';\nimport FormDiv from './components/FormDiv'\nimport Wellcomeboard from './components/Wellocmebord'\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      formDiv : true, // is ko bad may true karna hai post component bane k bad\n      WellcomeBoard : false,\n    }\n\n  this.unMountFormDiv = this.unMountFormDiv.bind(this)\n  this.unMountWellcomeBoard = this.unMountWellcomeBoard.bind(this)\n\n    \n  }\n\nunMountFormDiv(){\n  this.setState({\n    formDiv : false,\n    WellcomeBoard : true,\n  })\n}\n\nunMountWellcomeBoard(){\n  this.setState({\n    formDiv : true,\n    WellcomeBoard : false,\n  })\n}\n\n\n\n  render() {\n    const {formDiv,WellcomeBoard} = this.state;\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n      Sign In & Sign Up Application With Firebase and Post Create\n      </header>\n\n       {formDiv && <FormDiv unMountFormDiv={this.unMountFormDiv}/>}\n      \n      {\n        WellcomeBoard && \n      <Wellcomeboard unMountWellcomeBoard={this.unMountWellcomeBoard}/>}\n      \n  \n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}